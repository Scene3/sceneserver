/---------------------
 -- sceneserver_mgr.bento
 --
 -- The scene manager module for sceneserver.
 --
 -- Copyright (c) 2013-2014 by Michael St. Hippolyte
 --
 --/
 
site sceneserver [=

    adopt three

    static SCENE_PATH_PREFIX = "scene/"

    /** Global world model.  All primary scenes are retrieved from this model. **/ 
    global bento_domain world_domain(name, path) = this_domain.child_domain(name, "world", path, "*.world", true)
    global bento_context world_context = world_domain.context
    global initial_scene_name = world_context.construct("initial_scene_name")

    /** Global cache for external world models.  External scenes may be retrieved from these 
     *  models and injected into the primary scene.
     **/
    global bento_domain{} external_domains = {}
    
    

    dynamic load_world(name, path) [=
        eval(world_domain(: name, path :));
        initial_scene_name;

        log("world domain main site: " + world_domain.main_site);

        eval(initial_scene_name(: :));
        
        log("world loaded, initial scene is " + initial_scene_name);
    =]
    
    dynamic scene retrieve_scene(name) [=
        scene instantiate_scene = world_context.construct(name) 

        instantiate_scene;        
    =]
    

    dynamic path_to_name(p) [=
        log("get name for path `" + p + "`");
        if (starts_with(p, SCENE_PATH_PREFIX)) [=
            substring(p, strlen(SCENE_PATH_PREFIX));
        =] else [=
            initial_scene_name;
        =]
    =]    
    
    dynamic scene get_scene_for_path(path) [=
        scene_name = path_to_name(path)
    
        if (!current_scene || current_scene.name != scene_name) [=
            current_scene(: retrieve_scene(scene_name) :);
        =] else [=
            current_scene;
        =]
    =]
    
=]
